{"remainingRequest":"H:\\Web\\Client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!H:\\Web\\Client\\src\\components\\online.vue?vue&type=template&id=5d461ee3","dependencies":[{"path":"H:\\Web\\Client\\src\\components\\online.vue","mtime":1694810089730},{"path":"H:\\Web\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677376279301},{"path":"H:\\Web\\Client\\node_modules\\babel-loader\\lib\\index.js","mtime":1677376279444},{"path":"H:\\Web\\Client\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1677376291311},{"path":"H:\\Web\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677376279301},{"path":"H:\\Web\\Client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1677376291311}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2IHN0eWxlPSJoZWlnaHQ6IDEwMHZoOyB3aWR0aDogMTAwJTsgdGV4dC1hbGlnbjogY2VudGVyIj4KICAgICAgICA8ZGl2IGNsYXNzPSJ0aXRsZSI+Zml2ZS10by1hLXJvdzwvZGl2PgogICAgICAgIDwhLS0gPGRpdiBzdHlsZT0iZGlzcGxheTogaW5saW5lLWZsZXg7anVzdGlmeS1jb250ZW50OiBjZW50ZXI7IGFsaWduLWl0ZW1zOiBjZW50ZXI7Ij4gLS0+CiAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLXRvcDogMzBweCI+e3sgdGlwIH19PC9kaXY+CiAgICAgICAgPGJ1dHRvbiBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyB0b3A6IDE1OyBsZWZ0OiAzMCIgdi1vbjpjbGljaz0icmVzdG9yZSI+CiAgICAgICAgICAgIFJlc3RvcmUKICAgICAgICA8L2J1dHRvbj4KICAgICAgICA8IS0tIDwvZGl2PiAtLT4KICAgICAgICA8Y2FudmFzIGlkPSJib2FyZCIgd2lkdGg9IjYwMCIgaGVpZ2h0PSI2MDAiPjwvY2FudmFzPgogICAgPC9kaXY+Cg=="},{"version":3,"sources":["H:\\Web\\Client\\src\\components\\online.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACxtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACR,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC,CAAC,CAAC","file":"H:/Web/Client/src/components/online.vue","sourceRoot":"","sourcesContent":["<template>\n    <div style=\"height: 100vh; width: 100%; text-align: center\">\n        <div class=\"title\">five-to-a-row</div>\n        <!-- <div style=\"display: inline-flex;justify-content: center; align-items: center;\"> -->\n        <div style=\"margin-top: 30px\">{{ tip }}</div>\n        <button style=\"position: absolute; top: 15; left: 30\" v-on:click=\"restore\">\n            Restore\n        </button>\n        <!-- </div> -->\n        <canvas id=\"board\" width=\"600\" height=\"600\"></canvas>\n    </div>\n</template>\n     \n<script>\nimport axios from \"axios\";\nimport Cookies from 'js-cookie'\nexport default {\n    name: \"five-to-a-row\",\n    data() {\n        return {\n            ctx: null,\n            chessBoard: [],\n            player: null,\n            over: null,\n            lastX: null,\n            lastY: null,\n            wins: [],\n            blackWin: [],\n            whiteWin: [],\n            count: 0,\n            tip: '',\n            id: null\n        };\n    },\n    mounted() {\n        let container = document.getElementById(\"board\");\n        container.addEventListener(\"click\", this.handleClick);\n        this.ctx = container.getContext(\"2d\");\n        this.drawChessBoard();\n\n        for (let i = 0; i < 15; i++) {\n            this.chessBoard[i] = [];\n            this.wins[i] = [];\n            for (let j = 0; j < 15; j++) {\n                this.chessBoard[i][j] = 0;\n                this.wins[i][j] = [];\n            }\n        }\n        this.horizon();\n        this.vertical();\n        this.slash();\n        this.reverse();\n        this.init();\n\n        if (Cookies.get('room') == this.$route.params.room) {\n            axios.post(\"http://localhost:1919/chess/room\", {\n                rooms: Cookies.get('room')\n            }).then(res => {\n                if (res.status == 200) {\n                    this.id = res.data._id\n                    if (res.data.board.length != 0) {\n                        this.lastX = res.data.lastX\n                        this.lastY = res.data.lastY\n                        let board = res.data.board\n                        this.chessBoard = res.data.board\n                        this.blackWin = res.data.black\n                        this.whiteWin = res.data.white\n                        this.player = res.data.player\n                        this.over = res.data.over\n                        for (let i = 0; i < 15; i++) {\n                            for (let j = 0; j < 15; j++) {\n                                if (board[i][j] == 1) {\n                                    this.player = false\n                                    this.drawChess(i, j)\n                                }\n                                else if (board[i][j] == 2) {\n                                    this.player = true\n                                    this.drawChess(i, j)\n                                }\n                            }\n                        }\n                        this.player = res.data.player\n                    }\n                    this.tip = res.data.results\n\n\n                }\n            }).catch(err => {\n                console.log(err)\n            })\n        }\n    },\n    watch: {\n        player() {\n            if (!this.over) {\n                this.tip = !this.player ? \"Black Turn\" : \"White Turn\";\n            }\n        },\n        '$route'(to) {\n            if (to.params.room != Cookies.get('room')) {\n                window.alert(\"You Are Not Allowed\");\n                this.$router.push({ name: 'online', params: { room: Cookies.get('room') } });\n            }\n        }\n\n    },\n    computed: {},\n    methods: {\n        horizon() {\n            for (var i = 0; i < 15; i++) {\n                for (var j = 0; j < 11; j++) {\n                    for (var k = 0; k < 5; k++) {\n                        this.wins[i][j + k][this.count] = true;\n                    }\n                    this.count++;\n                }\n            }\n        },\n        vertical() {\n            //竖线\n            for (var i = 0; i < 15; i++) {\n                for (var j = 0; j < 11; j++) {\n                    for (var k = 0; k < 5; k++) {\n                        this.wins[j + k][i][this.count] = true;\n                    }\n                    this.count++;\n                }\n            }\n        },\n        slash() {\n            //斜线\n            for (var i = 0; i < 11; i++) {\n                for (var j = 0; j < 11; j++) {\n                    for (var k = 0; k < 5; k++) {\n                        this.wins[i + k][j + k][this.count] = true;\n                    }\n                    this.count++;\n                }\n            }\n        },\n        reverse() {\n            //反斜线\n            for (var i = 0; i < 11; i++) {\n                for (var j = 14; j > 3; j--) {\n                    for (var k = 0; k < 5; k++) {\n                        this.wins[i + k][j - k][this.count] = true;\n                    }\n                    this.count++;\n                }\n            }\n        },\n        init() {\n            for (var i = 0; i < this.count; i++) {\n                this.blackWin[i] = 0;\n                this.whiteWin[i] = 0;\n            }\n        },\n        drawChessBoard() {\n            for (var i = 0; i < 15; i++) {\n                this.ctx.moveTo(20 + i * 40, 20);\n                this.ctx.lineTo(20 + i * 40, 580);\n                this.ctx.stroke();\n                this.ctx.moveTo(20, 20 + i * 40);\n                this.ctx.lineTo(580, 20 + i * 40);\n                this.ctx.stroke();\n            }\n        },\n        drawChess(x, y) {\n            this.ctx.beginPath();\n            this.ctx.arc(20 + x * 40, 20 + y * 40, 15, 0, 2 * Math.PI);\n            this.ctx.closePath();\n            var grd = this.ctx.createRadialGradient(\n                25 + x * 40,\n                15 + y * 40,\n                15,\n                20 + x * 40,\n                20 + y * 40,\n                35\n            );\n            if (!this.player) {\n                grd.addColorStop(0, \"#000000\");\n                grd.addColorStop(1, \"#ffffff\");\n            } else {\n                grd.addColorStop(0, \"#ffffff\");\n                grd.addColorStop(1, \"#000000\");\n            }\n\n            this.ctx.fillStyle = grd;\n            this.ctx.fill();\n        },\n\n        handleClick(event) {\n            if (this.over) {\n                return;\n            }\n            var x = Math.floor(event.offsetX / 40);\n            var y = Math.floor(event.offsetY / 40);\n\n            if (this.chessBoard[x][y] == 0) {\n                this.drawChess(x, y);\n                this.player = !this.player;\n                if (this.player) {\n                    this.chessBoard[x][y] = 1;\n                    for (let k = 0; k < this.count; k++) {\n                        if (this.wins[x][y][k]) {\n                            this.blackWin[k]++;\n                        }\n                    }\n                } else {\n                    this.chessBoard[x][y] = 2;\n                    for (let k = 0; k < this.count; k++) {\n                        if (this.wins[x][y][k]) {\n                            this.whiteWin[k]++;\n                        }\n                    }\n                }\n\n                axios.post(\"http://localhost:1919/chess/upload\", {\n                    _id: this.id,\n                    board: this.chessBoard,\n                    player: this.player,\n                    black: this.blackWin,\n                    white: this.whiteWin,\n                    lastX: x,\n                    lastY: y,\n                }).then(res => {\n                    if (res.status == 200) {\n                        this.lastX = x;\n                        this.lastY = y;\n                        for (let k = 0; k < this.count; k++) {\n                            if (this.blackWin[k] == 5) {\n                                this.over = true\n                                axios.post(\"http://localhost:1919/chess/upload\", {\n                                    _id: this.id,\n                                    over: this.over,\n                                    results: \"Black Win!\"\n                                }).then(res => {\n                                    console.log('black', res)\n                                    if (res.status == 200) {\n                                        window.alert(\"Black Win!\");\n                                        this.tip = \"Black Win!\";\n                                        return\n                                    }\n                                }).catch(err => {\n                                    console.log(err)\n                                })\n                            }\n\n                            if (this.whiteWin[k] == 5) {\n                                this.over = true\n                                axios.post(\"http://localhost:1919/chess/upload\", {\n                                    _id: this.id,\n                                    over: this.over,\n                                    results: \"White Win!\"\n                                }).then(res => {\n                                    console.log('white', res)\n                                    if (res.status == 200) {\n                                        window.alert(\"White Win!\");\n                                        this.tip = \"White Win!\";\n                                        return\n                                    }\n                                }).catch(err => {\n                                    console.log(err)\n                                })\n                            }\n                        }\n                    }\n                }).catch(err => {\n                    console.log(err)\n                })\n\n            }\n        },\n        restore() {\n            if (this.lastX && this.lastY) {\n                this.ctx.clearRect(0, 0, 600, 600);\n                this.ctx.beginPath();\n                this.ctx.arc(0, 0, 0, 0, 0);\n                this.ctx.fill();\n            }\n            for (let i = 0; i < 15; i++) {\n                this.chessBoard[i] = [];\n                for (let j = 0; j < 15; j++) {\n                    this.chessBoard[i][j] = 0;\n                }\n            }\n            for (let i = 0; i < this.count; i++) {\n                this.blackWin[i] = 0;\n                this.whiteWin[i] = 0;\n            }\n\n            this.drawChessBoard();\n            this.over = false;\n            this.player = false;\n\n            axios.post(\"http://localhost:1919/chess/upload\", {\n                _id: this.id,\n                over: this.over,\n                player: this.player,\n                board: this.chessBoard,\n                black: this.blackWin,\n                white: this.whiteWin,\n            }).then(res => {\n                if (res.status == 200) {\n                    this.tip = \"Black Turn\";\n                }\n            }).catch(err => {\n                console.log(err)\n            })\n        },\n    },\n};\n</script>\n     \n<style>\ncanvas {\n    margin-top: 30px;\n    box-shadow: -2px -2px 2px #f0f0f0, 5px 5px 5px #9d9d9d;\n}\n\n.title {\n    font-size: 32px;\n    font-weight: 800;\n}\n</style>"]}]}