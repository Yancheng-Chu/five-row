{"remainingRequest":"H:\\Web\\Client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!H:\\Web\\Client\\src\\components\\main.vue?vue&type=style&index=0&id=5c886d6e&lang=css","dependencies":[{"path":"H:\\Web\\Client\\src\\components\\main.vue","mtime":1695125736149},{"path":"H:\\Web\\Client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1677376289140},{"path":"H:\\Web\\Client\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1677376291311},{"path":"H:\\Web\\Client\\node_modules\\postcss-loader\\src\\index.js","mtime":1677376289733},{"path":"H:\\Web\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677376279301},{"path":"H:\\Web\\Client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1677376291311}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5idXR0b24gewogIGRpc3BsYXk6IGJsb2NrOwogIG1hcmdpbjogYXV0bzsKICBtYXJnaW4tdG9wOiA2MHB4OwogIGZvbnQtc2l6ZTogMzJweDsKfQoKLnRpdGxlIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgZm9udC1zaXplOiAzMnB4OwogIGZvbnQtd2VpZ2h0OiA4MDA7Cn0K"},{"version":3,"sources":["H:\\Web\\Client\\src\\components\\main.vue"],"names":[],"mappings":";AAqLA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAClB","file":"H:/Web/Client/src/components/main.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"title\">five-to-a-row</div>\n\n  <div v-show=\"isOnline\">\n    <button class=\"button\" v-on:click=\"back\">\n      Back\n    </button>\n    <button class=\"button\" v-on:click=\"create\">\n      Create\n    </button>\n    <div style=\"display: flex; justify-content: center; align-items: center;margin-top: 60px;\">\n      <van-cell-group inset>\n        <van-field v-model=\"name\" label=\"Name\" placeholder=\"Please Enter Name\" style=\"font-size:40px;\" />\n      </van-cell-group>\n    </div>\n\n    <div style=\"display: flex; justify-content: center; align-items: center;margin-top: 60px;\">\n      <van-cell-group inset>\n        <van-field v-model=\"room\" label=\"Room\" type=\"digital\" placeholder=\"Please Enter Room\" style=\"font-size:40px;\" />\n      </van-cell-group>\n    </div>\n\n\n    <van-button @click=\"enter\" round block style=\"font-size: 18px; height: 32px;\">\n      Enter\n    </van-button>\n  </div>\n  <div v-show=\"!isOnline\">\n    <div>{{ msg }}</div>\n\n    <button class=\"button\" v-on:click=\"local\">\n      Local\n    </button>\n    <button class=\"button\" v-on:click=\"online\">\n      Online\n    </button>\n    <button class=\"button\" v-on:click=\"computer\">\n      Computer\n    </button>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\"\nimport Cookies from 'js-cookie'\nexport default {\n  name: \"five-to-a-row\",\n  data() {\n    return {\n      room: '',\n      isOnline: false,\n      msg: '',\n      name: '',\n    }\n  },\n  mounted() {\n    this.$socket.emit('login', this.$socket.id)\n  },\n  sockets: {\n\n    newM(data) {\n      this.msg = data.msg\n    },\n\n  },\n  created() {\n    Cookies.remove('room')\n  },\n  methods: {\n\n    local() {\n      this.$router.push('/local');\n    },\n    online() {\n      this.isOnline = true\n    },\n    computer() {\n      this.$router.push('/test');\n    },\n    create() {\n      if (this.name == '') {\n        alert('Please Enter Name')\n      } else {\n        let users = []\n        users.push(this.name)\n        axios.post(\"http://localhost:1919/chess/create\", {\n          users: users\n        }).then(res => {\n          if (res.status == 200) {\n            let rooms = res.data.rooms\n            let token = {\n              id: this.name,\n              rooms: rooms,\n              cheese: ''\n            }\n            Cookies.set('token', JSON.stringify(token))\n            Cookies.set('room', rooms)\n            Cookies.set('id', res.data._id)\n            this.$socket.emit('joinRoom', res.data.rooms)\n            this.$router.push({ name: 'online', params: { room: token.rooms } });\n          }\n        }).catch(err => {\n          console.log(err)\n        })\n      }\n    },\n    enter() {\n      if (this.name == '') {\n        alert('Please Enter Name')\n      } else {\n        axios.post(\"http://localhost:1919/chess/enter\", {\n          rooms: this.room,\n          // user: u\n        }).then(res => {\n          if (res.status == 200) {\n            if (res.data != '') {\n              if (res.data.users.length <= 1) {\n                if (res.data.users.indexOf(this.name) == -1) {\n                  let user = res.data.users\n                  user.push(this.name)\n                  Cookies.set('id', res.data._id)\n                  this.$socket.emit('joinRoom', this.room, user, res.data._id)\n\n                  let token = {\n                    id: this.name,\n                    rooms: this.room,\n                    cheese: ''\n                  }\n                  Cookies.set('token', JSON.stringify(token))\n                  Cookies.set('room', this.room)\n                  Cookies.set('id', res.data._id)\n                  this.$socket.emit('joinRoom', this.room)\n                  this.$router.push({ name: 'online', params: { room: this.room } });\n\n                } else {\n                  let token = {\n                    id: this.name,\n                    rooms: this.room,\n                    cheese: ''\n                  }\n                  Cookies.set('token', JSON.stringify(token))\n                  Cookies.set('room', this.room)\n                  Cookies.set('id', res.data._id)\n                  this.$socket.emit('joinRoom', res.data.rooms)\n                  this.$router.push({ name: 'online', params: { room: this.room } });\n                }\n              } else {\n                if (res.data.users.indexOf(this.name) == -1) {\n                  alert('FULL, If you are player, Please Enter correct name')\n                } else {\n                  let token = {\n                    id: this.name,\n                    rooms: this.room,\n                    cheese: ''\n                  }\n                  Cookies.set('token', JSON.stringify(token))\n                  Cookies.set('room', this.room)\n                  Cookies.set('id', res.data._id)\n                  this.$socket.emit('joinRoom', res.data.room)\n                  this.$router.push({ name: 'online', params: { room: this.room } });\n                }\n\n              }\n\n            } else {\n              window.alert(\"No Such Room!\");\n            }\n          }\n        }).catch(err => {\n          console.log(err)\n        })\n      }\n    },\n    back() {\n      this.isOnline = false\n    }\n  },\n}\n</script>\n \n<style>\n.button {\n  display: block;\n  margin: auto;\n  margin-top: 60px;\n  font-size: 32px;\n}\n\n.title {\n  text-align: center;\n  font-size: 32px;\n  font-weight: 800;\n}\n</style>"]}]}